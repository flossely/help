Introduction|[1]|<p>Welcome to the web system comprehensive guide for the users and system administrators. Download and install any web application you want, test your favorite browser games, manage the content on a server, test some functions of web applications, learn to perform basic tasks and manage packages that you can install from Git repositories, deploy a web server and install Get Package Manager to build your functioning web system.</p><p>With the Get Package Manager, you can download and install any package to your web server current directory from any online/public Git repository. You can update existing packages, replace them with another ones or remove them from the current directory in a web server opened in your browser that contains get.php file.</p><p>A web system working on web server is a complex of web applications that make it work like any typical operation system, with user and content managing functions implemented. A directory with web system must contain a package manager app or script that can download packages and manage installed third-party applications.</p><p>The latest version of a web system working with Get Package Manager is amorphous and bare bones since you decide how your web system and instance would look like, download any third-party content from online Git repository and extend the functionality of your website, much like what you would usually do on your Linux system. It should include Get Package Manager as necessary component. Without it, you can still use web apps but you will be unable to reinstall them and download any content from online Git repositories.</p><p>Like in the case of Linux systems, every package you download from online Git repository has its own symbolic ID which is also the package's basename. To make operations with packages you need to know their precise IDs.</p><h3>Web System Basics</h3><p>Any server document root directory on the web server is called instance. Any instance can include subfolders of any kind, depending on what files they contain. Rating and mode files make any directory inside the instance a profile, get.php script make it a system. Any directory and its subdirectory inside the instance can be both or none of them. Any profile or system in the web server is portable, it means that any of them can be easily moved to another web server, be divided into separate parts or merged into a new one, be created with init command and be wiped out with kill command. Any directory containing profile, system or both is called entity.</p><p>Unlike join and leave commands, merge and divide commands work only with directories, changing their ratings and modes, and operate at one level of server filesystem. Merging directories result in surplus in the resulting entity rating and median parameter of their modes. Source directories are being deleted after merge. Dividing the entity into any number of resulting entities will have their ratings calculated as the rating of source entity divided into the number of resulting entities. The result is being rounded into an integer number. In contrast, join and leave commands do not destroy source entities, don't change their data and can operate at many levels of file system.</p><p>Every app inside the current directory work with files which relative path starts with the current directory. Files managers accept any directory inside the current one as its request parameter. This parameter is used in glob function to display files inside the directory entered in this parameter, limited only by query parameter. In many other cases, the app executes glob function within the current directory.</p><p>The current directory opened in a browser and the server root directory is not the same thing. Server root directory is set to the currently launched web host in a browser by its web server configuration, i.e. document root of the host in this server. Current directory is the path inside its server host opened in a web browser as the working path. Can be used as relative path opened in a web app used to access certain filename in a server (like file manager) or as currently used path where the app locates (like profile stats for example).</p>