Models|[1]|<p>A web system working on web server is a complex of web applications that make it work like any typical operation system, with user and content managing functions implemented. A directory with web system must contain a package manager app or script that can download packages and manage installed third-party applications.</p><p>The latest version of a web system working with Get Package Manager is amorphous and bare bones since you decide how your web system and instance would look like, download any third-party content from online Git repository and extend the functionality of your website, much like what you would usually do on your Linux system. It should include Get Package Manager as necessary component. Without it, you can still use web apps but you will be unable to reinstall them and download any content from online Git repositories.</p><p>Like in the case of Linux systems, every package you download from online Git repository has its own symbolic ID which is also the package's basename. To make operations with packages you need to know their precise IDs.</p><p>Every web instance has its own set of operation models. They represent the branches of activities in which the apps installed on an instance work. There are packages that represent and implement the functionality of models, using the same name as the name of its respective model. For example, file is a model for web system, there is a package for it called file. This package comes with basic file operations like move, copy and delete for web systems. In order for it to use in various web apps from separate packages independently from them, this package does not include any GUI app. Instead, there are separate packages that use the components from this package, like the files package which contains GUI apps like file manager and uploader. Entity is also a model used to control subdirectories in web server instance, their data, settings and content.</p>